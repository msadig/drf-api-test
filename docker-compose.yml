version: '3'

services:
  
 
  postgres:
    container_name: postgres
    image: postgres:12
    restart: always
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - ${PWD}/_data/postgres:/var/lib/postgresql/data
      - ${PWD}/.conf/postgre_test_db.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    environment:
      - LC_ALL=C.UTF-8

  api: &api
    build: .
    image: drf-api:latest
    container_name: drf-api
    restart: always
    command: ["uwsgi", "--ini", "/app/uwsgi.ini"]
    env_file: .env
    tty: true
    environment:
      - HTTP_PORT=8015
      - STATS_PORT=8001
      - DEBUG=False
      - POSTGRES_HOST=postgres
    volumes:
      - ${PWD}/app:/app
    ports:
      - 8015:8015
    depends_on:
      - postgres
  
  setup:
    <<: *api
    restart: "no"
    container_name: drf-setup
    command: /bin/sh -c "echo 'Waiting db connection...'; while ! pg_isready -h postgres -p 5432 -U postgres; do sleep 1; done; python manage.py migrate --noinput; python manage.py migrate --noinput; python manage.py collectstatic --noinput; python manage.py loaddata order/fixtures/pizzas.json; python manage.py loaddata order/fixtures/users.json"
    ports:
      - "8015"
  
  
  test:
    <<: *api
    container_name: drf-test
    restart: "no"
    command: /bin/sh -c "echo 'Waiting db connection...'; while ! pg_isready -h postgres -p 5432 -U postgres; do sleep 1; done; coverage run --source='.' manage.py test; coverage report"
    ports:
      - "8015"
  